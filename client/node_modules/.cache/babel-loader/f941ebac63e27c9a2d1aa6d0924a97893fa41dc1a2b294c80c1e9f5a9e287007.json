{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const UseContext=/*#__PURE__*/createContext();export const UseProvider=_ref=>{let{children}=_ref;const[selectedQuery,setSelectedQuery]=useState(localStorage.getItem(\"selectedQuery\")||\"\");const[selectedReportTitle,setSelectedReportTitle]=useState(localStorage.getItem(\"selectedReportTitle\")||\"\");const[selectedInitRun,setSelectedInitRun]=useState(localStorage.getItem(\"selectedInitRun\")||\"\");const generateNewRecNo=()=>{// localStorage'deki anahtarlar ve değerler\nconst localStorageKeys=Object.keys(localStorage);let newRecNo=1;while(localStorageKeys.includes(\"report_\".concat(newRecNo))){newRecNo++;}return newRecNo;};const handleNewReport=()=>{const newRecNo=generateNewRecNo();localStorage.setItem(\"report_\".concat(newRecNo),JSON.stringify({selectedQuery,selectedReportTitle,selectedInitRun}));};useEffect(()=>{// localStorage'deki anahtarlar ve değerler\nconst localStorageKeys=Object.keys(localStorage);// Eğer selectedRecNo zaten localStorage anahtarları arasında yoksa yeni bir rapor oluştur\nif(!localStorageKeys.includes(\"report_\".concat(selectedRecNo))){handleNewReport();}// localStorage'a seçili raporun verilerini kaydet\nlocalStorage.setItem(\"selectedQuery\",selectedQuery);localStorage.setItem(\"selectedReportTitle\",selectedReportTitle);localStorage.setItem(\"selectedInitRun\",selectedInitRun);},[selectedQuery,selectedReportTitle,selectedRecNo,selectedInitRun]);return/*#__PURE__*/_jsx(UseContext.Provider,{value:{selectedQuery,setSelectedQuery,selectedReportTitle,setSelectedReportTitle,selectedInitRun,setSelectedInitRun},children:children});};export const useQuery=()=>useContext(UseContext);","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","UseContext","UseProvider","_ref","children","selectedQuery","setSelectedQuery","localStorage","getItem","selectedReportTitle","setSelectedReportTitle","selectedInitRun","setSelectedInitRun","generateNewRecNo","localStorageKeys","Object","keys","newRecNo","includes","concat","handleNewReport","setItem","JSON","stringify","selectedRecNo","Provider","value","useQuery"],"sources":["C:/Internship Project/client/src/pages/HomePage/useContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\nconst UseContext = createContext();\r\n\r\nexport const UseProvider = ({ children }) => {\r\n  const [selectedQuery, setSelectedQuery] = useState(\r\n    localStorage.getItem(\"selectedQuery\") || \"\"\r\n  );\r\n  const [selectedReportTitle, setSelectedReportTitle] = useState(\r\n    localStorage.getItem(\"selectedReportTitle\") || \"\"\r\n  );\r\n  const [selectedInitRun, setSelectedInitRun] = useState(\r\n    localStorage.getItem(\"selectedInitRun\") || \"\"\r\n  );\r\n\r\n  const generateNewRecNo = () => {\r\n    // localStorage'deki anahtarlar ve değerler\r\n    const localStorageKeys = Object.keys(localStorage);\r\n\r\n    let newRecNo = 1;\r\n    while (localStorageKeys.includes(`report_${newRecNo}`)) {\r\n      newRecNo++;\r\n    }\r\n    return newRecNo;\r\n  };\r\n\r\n  const handleNewReport = () => {\r\n    const newRecNo = generateNewRecNo();\r\n    localStorage.setItem(\r\n      `report_${newRecNo}`,\r\n      JSON.stringify({\r\n        selectedQuery,\r\n        selectedReportTitle,\r\n        selectedInitRun,\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    // localStorage'deki anahtarlar ve değerler\r\n    const localStorageKeys = Object.keys(localStorage);\r\n\r\n    // Eğer selectedRecNo zaten localStorage anahtarları arasında yoksa yeni bir rapor oluştur\r\n    if (!localStorageKeys.includes(`report_${selectedRecNo}`)) {\r\n      handleNewReport();\r\n    }\r\n\r\n    // localStorage'a seçili raporun verilerini kaydet\r\n    localStorage.setItem(\"selectedQuery\", selectedQuery);\r\n    localStorage.setItem(\"selectedReportTitle\", selectedReportTitle);\r\n    localStorage.setItem(\"selectedInitRun\", selectedInitRun);\r\n  }, [selectedQuery, selectedReportTitle, selectedRecNo, selectedInitRun]);\r\n\r\n  return (\r\n    <UseContext.Provider\r\n      value={{\r\n        selectedQuery,\r\n        setSelectedQuery,\r\n        selectedReportTitle,\r\n        setSelectedReportTitle,\r\n        selectedInitRun,\r\n        setSelectedInitRun,\r\n      }}\r\n    >\r\n      {children}\r\n    </UseContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useQuery = () => useContext(UseContext);\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,UAAU,cAAGN,aAAa,CAAC,CAAC,CAElC,MAAO,MAAM,CAAAO,WAAW,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACtC,KAAM,CAACE,aAAa,CAAEC,gBAAgB,CAAC,CAAGT,QAAQ,CAChDU,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,EAAI,EAC3C,CAAC,CACD,KAAM,CAACC,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGb,QAAQ,CAC5DU,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAC,EAAI,EACjD,CAAC,CACD,KAAM,CAACG,eAAe,CAAEC,kBAAkB,CAAC,CAAGf,QAAQ,CACpDU,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,EAAI,EAC7C,CAAC,CAED,KAAM,CAAAK,gBAAgB,CAAGA,CAAA,GAAM,CAC7B;AACA,KAAM,CAAAC,gBAAgB,CAAGC,MAAM,CAACC,IAAI,CAACT,YAAY,CAAC,CAElD,GAAI,CAAAU,QAAQ,CAAG,CAAC,CAChB,MAAOH,gBAAgB,CAACI,QAAQ,WAAAC,MAAA,CAAWF,QAAQ,CAAE,CAAC,CAAE,CACtDA,QAAQ,EAAE,CACZ,CACA,MAAO,CAAAA,QAAQ,CACjB,CAAC,CAED,KAAM,CAAAG,eAAe,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAH,QAAQ,CAAGJ,gBAAgB,CAAC,CAAC,CACnCN,YAAY,CAACc,OAAO,WAAAF,MAAA,CACRF,QAAQ,EAClBK,IAAI,CAACC,SAAS,CAAC,CACblB,aAAa,CACbI,mBAAmB,CACnBE,eACF,CAAC,CACH,CAAC,CACH,CAAC,CAEDb,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAgB,gBAAgB,CAAGC,MAAM,CAACC,IAAI,CAACT,YAAY,CAAC,CAElD;AACA,GAAI,CAACO,gBAAgB,CAACI,QAAQ,WAAAC,MAAA,CAAWK,aAAa,CAAE,CAAC,CAAE,CACzDJ,eAAe,CAAC,CAAC,CACnB,CAEA;AACAb,YAAY,CAACc,OAAO,CAAC,eAAe,CAAEhB,aAAa,CAAC,CACpDE,YAAY,CAACc,OAAO,CAAC,qBAAqB,CAAEZ,mBAAmB,CAAC,CAChEF,YAAY,CAACc,OAAO,CAAC,iBAAiB,CAAEV,eAAe,CAAC,CAC1D,CAAC,CAAE,CAACN,aAAa,CAAEI,mBAAmB,CAAEe,aAAa,CAAEb,eAAe,CAAC,CAAC,CAExE,mBACEX,IAAA,CAACC,UAAU,CAACwB,QAAQ,EAClBC,KAAK,CAAE,CACLrB,aAAa,CACbC,gBAAgB,CAChBG,mBAAmB,CACnBC,sBAAsB,CACtBC,eAAe,CACfC,kBACF,CAAE,CAAAR,QAAA,CAEDA,QAAQ,CACU,CAAC,CAE1B,CAAC,CAED,MAAO,MAAM,CAAAuB,QAAQ,CAAGA,CAAA,GAAM/B,UAAU,CAACK,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}