{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ReportButton(){const[key,setKey]=useState([]);const[value,setValue]=useState([]);// BUG bu effect sayfa yenilenince çalışmamalı sadece butona basınca çalışmalı BUG\nconst fetchData=(()=>{const fetchData=async()=>{try{const response=await axios.get(\"http://localhost:3000/report-page\");setKey(Object.keys(response.data[0]));//FOR COLON\nconst valueArray=[];//TODO OK VALULERİ EKLYOR ARRAY'E\nfor(let i=0;i<Object.values(response.data).length;i++){valueArray.push(Object.values(response.data[i]));}setValue(valueArray);//FOR ROW\n}catch(error){console.error(\"Error fetching data\",error);}};fetchData();},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:fetchData,children:\"Veriyi Getir\"}),/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsxs(\"tbody\",{children:[/*#__PURE__*/_jsx(\"tr\",{children:key.map((item,index)=>/*#__PURE__*/_jsx(\"td\",{children:item},index))}),value.map((innerArray,outerIndex)=>/*#__PURE__*/_jsx(\"tr\",{children:innerArray.map((item,innerIndex)=>/*#__PURE__*/_jsx(\"td\",{children:item},innerIndex))},outerIndex))]})})]});}export default ReportButton;// TODO USE EFFECT VE AXİOS İLE BİLGİLERİ GETİR ORADAN DA ONLARI GRİDLE TABLO ŞEKLİNDE BUTONU CLİCKLEDİĞİNDE\n//TODO burada useState ile  aldığımız verileri  use effect içerisinde deStructere edelim key ve valuediye","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","ReportButton","key","setKey","value","setValue","fetchData","response","get","Object","keys","data","valueArray","i","values","length","push","error","console","children","onClick","map","item","index","innerArray","outerIndex","innerIndex"],"sources":["C:/Internship Project/client/src/pages/ReportPage/buttonReport.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction ReportButton() {\r\n  const [key, setKey] = useState([]);\r\n  const [value, setValue] = useState([]);\r\n\r\n  // BUG bu effect sayfa yenilenince çalışmamalı sadece butona basınca çalışmalı BUG\r\n  const fetchData =\r\n    (() => {\r\n      const fetchData = async () => {\r\n        try {\r\n          const response = await axios.get(\"http://localhost:3000/report-page\");\r\n\r\n          setKey(Object.keys(response.data[0])); //FOR COLON\r\n\r\n          const valueArray = []; //TODO OK VALULERİ EKLYOR ARRAY'E\r\n\r\n          for (let i = 0; i < Object.values(response.data).length; i++) {\r\n            valueArray.push(Object.values(response.data[i]));\r\n          }\r\n          setValue(valueArray); //FOR ROW\r\n        } catch (error) {\r\n          console.error(\"Error fetching data\", error);\r\n        }\r\n      };\r\n      fetchData();\r\n    },\r\n    []);\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={fetchData}>Veriyi Getir</button>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            {key.map((item, index) => (\r\n              <td key={index}>{item}</td>\r\n            ))}\r\n          </tr>\r\n          {value.map((innerArray, outerIndex) => (\r\n            <tr key={outerIndex}>\r\n              {innerArray.map((item, innerIndex) => (\r\n                <td key={innerIndex}>{item}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReportButton;\r\n\r\n// TODO USE EFFECT VE AXİOS İLE BİLGİLERİ GETİR ORADAN DA ONLARI GRİDLE TABLO ŞEKLİNDE BUTONU CLİCKLEDİĞİNDE\r\n//TODO burada useState ile  aldığımız verileri  use effect içerisinde deStructere edelim key ve valuediye\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,YAAYA,CAAA,CAAG,CACtB,KAAM,CAACC,GAAG,CAAEC,MAAM,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAClC,KAAM,CAACU,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAEtC;AACA,KAAM,CAAAY,SAAS,EACZ,IAAM,CACL,KAAM,CAAAA,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAX,KAAK,CAACY,GAAG,CAAC,mCAAmC,CAAC,CAErEL,MAAM,CAACM,MAAM,CAACC,IAAI,CAACH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;AAEvC,KAAM,CAAAC,UAAU,CAAG,EAAE,CAAE;AAEvB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGJ,MAAM,CAACK,MAAM,CAACP,QAAQ,CAACI,IAAI,CAAC,CAACI,MAAM,CAAEF,CAAC,EAAE,CAAE,CAC5DD,UAAU,CAACI,IAAI,CAACP,MAAM,CAACK,MAAM,CAACP,QAAQ,CAACI,IAAI,CAACE,CAAC,CAAC,CAAC,CAAC,CAClD,CACAR,QAAQ,CAACO,UAAU,CAAC,CAAE;AACxB,CAAE,MAAOK,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC7C,CACF,CAAC,CACDX,SAAS,CAAC,CAAC,CACb,CAAC,CACD,EAAE,CAAC,CAEL,mBACEN,KAAA,QAAAmB,QAAA,eACErB,IAAA,WAAQsB,OAAO,CAAEd,SAAU,CAAAa,QAAA,CAAC,cAAY,CAAQ,CAAC,cACjDrB,IAAA,UAAAqB,QAAA,cACEnB,KAAA,UAAAmB,QAAA,eACErB,IAAA,OAAAqB,QAAA,CACGjB,GAAG,CAACmB,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,gBACnBzB,IAAA,OAAAqB,QAAA,CAAiBG,IAAI,EAAZC,KAAiB,CAC3B,CAAC,CACA,CAAC,CACJnB,KAAK,CAACiB,GAAG,CAAC,CAACG,UAAU,CAAEC,UAAU,gBAChC3B,IAAA,OAAAqB,QAAA,CACGK,UAAU,CAACH,GAAG,CAAC,CAACC,IAAI,CAAEI,UAAU,gBAC/B5B,IAAA,OAAAqB,QAAA,CAAsBG,IAAI,EAAjBI,UAAsB,CAChC,CAAC,EAHKD,UAIL,CACL,CAAC,EACG,CAAC,CACH,CAAC,EACL,CAAC,CAEV,CAEA,cAAe,CAAAxB,YAAY,CAE3B;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}