{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{Link}from\"react-router-dom\";import axios from\"axios\";import{useQuery}from\"./useContext\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function TreeView(){//RAPOR TANİMNLARİ TABLOSUNUN  KOLONLARININ STATE TANIMLARI\nconst[recNo,setRecNo]=useState([]);//TODO REPORT PAGE SAYFASINA AKTARILACAK PARAMETRİK OLARAK//\nconst[reportTitle,setReportTitle]=useState([]);// DİREK OLARAK\nconst[menuName,setMenuName]=useState([]);// TODO REPORT PAGE SAYFASINA AKTARILACAK SAYFANIN BAŞLIĞI  OLARAK\nconst[query,setQuery]=useState([]);// TODO REPORT PAGE SAYFASINA AKATARIALACAK SORGU OLARAK  OLARAK\nconst[initRun,setInitRun]=useState([]);// TODO REPORT PAGE SAYFASINA AKATARILACAK DEĞER  OLARAK\nconst{setSelectedReportTitle,setSelectedQuery,setSelectedRecNo,setSelectedInitRun}=useQuery();// AKTARILACAK VERİLER USEQUERY SAYESİNDE AKTARILIR\nuseEffect(()=>{async function fetchMenuItems(){try{const response=await axios.get(\"/tree-view\");//BOŞ ARRAYLER İÇLERİNİ RAPOR TANIMLARININ DEĞERLERİ İLE DOLDURULMAK İÇİN OLUŞTURULDU\nconst menuArray=[];const queryArray=[];const reportTitleArray=[];const recNoArray=[];const initRunArray=[];let iteraty,recNo,menuAdi,raporBaslik,selectSorgusu,baslangictaRaporCalissinMi;const tabloTanimlariDegerleri=Object.values(response.data);for(let i=0;i<tabloTanimlariDegerleri.length;i++){//\niteraty=response.data[i];recNo=Object.values(iteraty)[0];menuAdi=Object.values(iteraty)[2];raporBaslik=Object.values(iteraty)[5];selectSorgusu=Object.values(iteraty)[6];baslangictaRaporCalissinMi=Object.values(iteraty)[7];menuArray.push(menuAdi);//MENU ADI\nqueryArray.push(selectSorgusu);//SELECT SORGUSU\nreportTitleArray.push(raporBaslik);//RAPOR BAŞLIK\nrecNoArray.push(recNo);// RECNO\ninitRunArray.push(baslangictaRaporCalissinMi);// BAŞLANGIÇTA RAPOR ÇALIŞSIN MI\n}setMenuName(menuArray);// menuName --- SAYFADA KULLANILACAK\nsetQuery(queryArray);// query ---->useContext\nsetInitRun(initRunArray);//  initRun ----> useContext\nsetRecNo(recNoArray);// recNo   -----> useContext\nsetReportTitle(reportTitleArray);// reportTitle ----> useContext\n}catch(error){console.error(\"Failed to fetch menu items: \",error);}}fetchMenuItems();},[]);const handleClick=async index=>{const selectedReportTitle=reportTitle[index];const selectedQuery=query[index];const selectedRecNo=recNo[index];const selectedInitRun=initRun[index];setSelectedReportTitle(selectedReportTitle);setSelectedQuery(selectedQuery);setSelectedRecNo(selectedRecNo);setSelectedInitRun(selectedInitRun);};return/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 border rounded-lg shadow-md\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-2xl font-bold mb-4\",children:\"RAPORLAR\"}),/*#__PURE__*/_jsx(\"ul\",{children:menuName.map((menuItem,index)=>/*#__PURE__*/_jsx(\"li\",{className:\"mb-2\",children:/*#__PURE__*/_jsx(Link,{to:{pathname:\"/report-page\"},onClick:()=>handleClick(index),className:\"block px-4 py-2 w-40 bg-blue-500 text-white rounded-md hover:bg-blue-600\",target:\"_blank\"// Yeni sekmede açılmasını sağlar\n,children:menuItem})},index))})]});}export default TreeView;","map":{"version":3,"names":["React","useState","useEffect","Link","axios","useQuery","jsx","_jsx","jsxs","_jsxs","TreeView","recNo","setRecNo","reportTitle","setReportTitle","menuName","setMenuName","query","setQuery","initRun","setInitRun","setSelectedReportTitle","setSelectedQuery","setSelectedRecNo","setSelectedInitRun","fetchMenuItems","response","get","menuArray","queryArray","reportTitleArray","recNoArray","initRunArray","iteraty","menuAdi","raporBaslik","selectSorgusu","baslangictaRaporCalissinMi","tabloTanimlariDegerleri","Object","values","data","i","length","push","error","console","handleClick","index","selectedReportTitle","selectedQuery","selectedRecNo","selectedInitRun","className","children","map","menuItem","to","pathname","onClick","target"],"sources":["C:/Internship Project/client/src/pages/HomePage/treeView.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useQuery } from \"./useContext\";\r\n\r\nfunction TreeView() {\r\n  //RAPOR TANİMNLARİ TABLOSUNUN  KOLONLARININ STATE TANIMLARI\r\n  const [recNo, setRecNo] = useState([]); //TODO REPORT PAGE SAYFASINA AKTARILACAK PARAMETRİK OLARAK//\r\n  const [reportTitle, setReportTitle] = useState([]); // DİREK OLARAK\r\n  const [menuName, setMenuName] = useState([]); // TODO REPORT PAGE SAYFASINA AKTARILACAK SAYFANIN BAŞLIĞI  OLARAK\r\n  const [query, setQuery] = useState([]); // TODO REPORT PAGE SAYFASINA AKATARIALACAK SORGU OLARAK  OLARAK\r\n  const [initRun, setInitRun] = useState([]); // TODO REPORT PAGE SAYFASINA AKATARILACAK DEĞER  OLARAK\r\n  const {\r\n    setSelectedReportTitle,\r\n    setSelectedQuery,\r\n    setSelectedRecNo,\r\n    setSelectedInitRun,\r\n  } = useQuery(); // AKTARILACAK VERİLER USEQUERY SAYESİNDE AKTARILIR\r\n\r\n  useEffect(() => {\r\n    async function fetchMenuItems() {\r\n      try {\r\n        const response = await axios.get(\"/tree-view\");\r\n\r\n        //BOŞ ARRAYLER İÇLERİNİ RAPOR TANIMLARININ DEĞERLERİ İLE DOLDURULMAK İÇİN OLUŞTURULDU\r\n        const menuArray = [];\r\n        const queryArray = [];\r\n        const reportTitleArray = [];\r\n        const recNoArray = [];\r\n        const initRunArray = [];\r\n        let iteraty,\r\n          recNo,\r\n          menuAdi,\r\n          raporBaslik,\r\n          selectSorgusu,\r\n          baslangictaRaporCalissinMi;\r\n        const tabloTanimlariDegerleri = Object.values(response.data);\r\n\r\n        for (let i = 0; i < tabloTanimlariDegerleri.length; i++) {\r\n          //\r\n          iteraty = response.data[i];\r\n          recNo = Object.values(iteraty)[0];\r\n          menuAdi = Object.values(iteraty)[2];\r\n          raporBaslik = Object.values(iteraty)[5];\r\n          selectSorgusu = Object.values(iteraty)[6];\r\n          baslangictaRaporCalissinMi = Object.values(iteraty)[7];\r\n\r\n          menuArray.push(menuAdi); //MENU ADI\r\n          queryArray.push(selectSorgusu); //SELECT SORGUSU\r\n          reportTitleArray.push(raporBaslik); //RAPOR BAŞLIK\r\n          recNoArray.push(recNo); // RECNO\r\n          initRunArray.push(baslangictaRaporCalissinMi); // BAŞLANGIÇTA RAPOR ÇALIŞSIN MI\r\n        }\r\n        setMenuName(menuArray); // menuName --- SAYFADA KULLANILACAK\r\n        setQuery(queryArray); // query ---->useContext\r\n        setInitRun(initRunArray); //  initRun ----> useContext\r\n        setRecNo(recNoArray); // recNo   -----> useContext\r\n        setReportTitle(reportTitleArray); // reportTitle ----> useContext\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch menu items: \", error);\r\n      }\r\n    }\r\n    fetchMenuItems();\r\n  }, []);\r\n\r\n  const handleClick = async (index) => {\r\n    const selectedReportTitle = reportTitle[index];\r\n    const selectedQuery = query[index];\r\n    const selectedRecNo = recNo[index];\r\n    const selectedInitRun = initRun[index];\r\n\r\n    setSelectedReportTitle(selectedReportTitle);\r\n    setSelectedQuery(selectedQuery);\r\n    setSelectedRecNo(selectedRecNo);\r\n    setSelectedInitRun(selectedInitRun);\r\n  };\r\n  return (\r\n    <div className=\"p-4 border rounded-lg shadow-md\">\r\n      <h1 className=\"text-2xl font-bold mb-4\">RAPORLAR</h1>\r\n      <ul>\r\n        {menuName.map((menuItem, index) => (\r\n          <li key={index} className=\"mb-2\">\r\n            <Link\r\n              to={{\r\n                pathname: \"/report-page\",\r\n              }}\r\n              onClick={() => handleClick(index)}\r\n              className=\"block px-4 py-2 w-40 bg-blue-500 text-white rounded-md hover:bg-blue-600\"\r\n              target=\"_blank\" // Yeni sekmede açılmasını sağlar\r\n            >\r\n              {menuItem}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TreeView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}