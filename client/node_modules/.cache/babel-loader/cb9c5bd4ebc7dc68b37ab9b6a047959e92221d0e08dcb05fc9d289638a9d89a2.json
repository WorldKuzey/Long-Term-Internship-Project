{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function ReportButton(){//const [data, setData] = useState([]);\nconst[key,setKey]=useState([]);const[value,setValue]=useState([]);// BUG bu effect sayfa yenilenince çalışmamalı sadece butona basınca çalışmalı BUG\nconst fetchData=useEffect(()=>{const fetchData=async()=>{try{const response=await axios.get(\"http://localhost:3000/report-page\");//const key = Object.keys(response.data[0]);\n//console.log(key);\n//setKey(key);\n//setValue(Object.entries(response.data)); // BUG İLK  OBJE GELİYOR SADECE //\n//const entries = Object.values(response.data);\n//console.log(entries[0]);\nconsole.log(response.data);//const test = [];\nfor(const a of Object.values(response.data)){console.log(a);}}catch(error){console.error(\"Error fetching data\",error);}};fetchData();},[value]);// const handleClick = () => {\n//   console.log(key);\n//   //console.log(value);\n// };\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{onClick:fetchData,children:\"Veriyi Getir\"}),/*#__PURE__*/_jsx(\"table\",{children:/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsx(\"tr\",{children:key.map((item,index)=>/*#__PURE__*/_jsx(\"td\",{children:item},index))})})})]});}export default ReportButton;// TODO USE EFFECT VE AXİOS İLE BİLGİLERİ GETİR ORADAN DA ONLARI GRİDLE TABLO ŞEKLİNDE BUTONU CLİCKLEDİĞİNDE\n//TODO burada useState ile  aldığımız verileri  use effect içerisinde deStructere edelim key ve valuediye","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","ReportButton","key","setKey","value","setValue","fetchData","response","get","console","log","data","a","Object","values","error","children","onClick","map","item","index"],"sources":["C:/Internship Project/client/src/pages/ReportPage/buttonReport.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction ReportButton() {\r\n  //const [data, setData] = useState([]);\r\n  const [key, setKey] = useState([]);\r\n  const [value, setValue] = useState([]);\r\n\r\n  // BUG bu effect sayfa yenilenince çalışmamalı sadece butona basınca çalışmalı BUG\r\n  const fetchData = useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:3000/report-page\");\r\n\r\n        //const key = Object.keys(response.data[0]);\r\n        //console.log(key);\r\n        //setKey(key);\r\n        //setValue(Object.entries(response.data)); // BUG İLK  OBJE GELİYOR SADECE //\r\n        //const entries = Object.values(response.data);\r\n        //console.log(entries[0]);\r\n\r\n        console.log(response.data);\r\n        //const test = [];\r\n        for (const a of Object.values(response.data)) {\r\n          console.log(a);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching data\", error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [value]);\r\n\r\n  // const handleClick = () => {\r\n  //   console.log(key);\r\n  //   //console.log(value);\r\n  // };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={fetchData}>Veriyi Getir</button>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            {key.map((item, index) => (\r\n              <td key={index}>{item}</td>\r\n            ))}\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReportButton;\r\n\r\n// TODO USE EFFECT VE AXİOS İLE BİLGİLERİ GETİR ORADAN DA ONLARI GRİDLE TABLO ŞEKLİNDE BUTONU CLİCKLEDİĞİNDE\r\n//TODO burada useState ile  aldığımız verileri  use effect içerisinde deStructere edelim key ve valuediye\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,YAAYA,CAAA,CAAG,CACtB;AACA,KAAM,CAACC,GAAG,CAAEC,MAAM,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAClC,KAAM,CAACU,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAEtC;AACA,KAAM,CAAAY,SAAS,CAAGX,SAAS,CAAC,IAAM,CAChC,KAAM,CAAAW,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAX,KAAK,CAACY,GAAG,CAAC,mCAAmC,CAAC,CAErE;AACA;AACA;AACA;AACA;AACA;AAEAC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC,CAC1B;AACA,IAAK,KAAM,CAAAC,CAAC,GAAI,CAAAC,MAAM,CAACC,MAAM,CAACP,QAAQ,CAACI,IAAI,CAAC,CAAE,CAC5CF,OAAO,CAACC,GAAG,CAACE,CAAC,CAAC,CAChB,CACF,CAAE,MAAOG,KAAK,CAAE,CACdN,OAAO,CAACM,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC7C,CACF,CAAC,CACDT,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,CAACF,KAAK,CAAC,CAAC,CAEX;AACA;AACA;AACA;AAEA,mBACEJ,KAAA,QAAAgB,QAAA,eACElB,IAAA,WAAQmB,OAAO,CAAEX,SAAU,CAAAU,QAAA,CAAC,cAAY,CAAQ,CAAC,cACjDlB,IAAA,UAAAkB,QAAA,cACElB,IAAA,UAAAkB,QAAA,cACElB,IAAA,OAAAkB,QAAA,CACGd,GAAG,CAACgB,GAAG,CAAC,CAACC,IAAI,CAAEC,KAAK,gBACnBtB,IAAA,OAAAkB,QAAA,CAAiBG,IAAI,EAAZC,KAAiB,CAC3B,CAAC,CACA,CAAC,CACA,CAAC,CACH,CAAC,EACL,CAAC,CAEV,CAEA,cAAe,CAAAnB,YAAY,CAE3B;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}