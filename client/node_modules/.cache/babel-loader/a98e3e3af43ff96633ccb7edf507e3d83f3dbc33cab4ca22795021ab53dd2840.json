{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const UseContext=/*#__PURE__*/createContext();export const UseProvider=_ref=>{let{children}=_ref;// localStorage'de saklanacak raporlar nesnesi\nconst[reports,setReports]=useState(JSON.parse(localStorage.getItem(\"reports\"))||{});// Rapor eklemek için fonksiyon\nconst addReport=(reportId,reportData)=>{setReports(prevReports=>({...prevReports,[reportId]:reportData}));};// Rapor silmek için fonksiyon\nconst removeReport=reportId=>{setReports(prevReports=>{const updatedReports={...prevReports};delete updatedReports[reportId];return updatedReports;});};// Raporları localStorage'e kaydetmek\nuseEffect(()=>{localStorage.setItem(\"reports\",JSON.stringify(reports));},[reports]);return/*#__PURE__*/_jsx(UseContext.Provider,{value:{reports,addReport,removeReport},children:children});};export const useQuery=()=>useContext(UseContext);","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","UseContext","UseProvider","_ref","children","reports","setReports","JSON","parse","localStorage","getItem","addReport","reportId","reportData","prevReports","removeReport","updatedReports","setItem","stringify","Provider","value","useQuery"],"sources":["C:/Internship Project/client/src/pages/HomePage/useContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\nconst UseContext = createContext();\r\n\r\nexport const UseProvider = ({ children }) => {\r\n  // localStorage'de saklanacak raporlar nesnesi\r\n  const [reports, setReports] = useState(\r\n    JSON.parse(localStorage.getItem(\"reports\")) || {}\r\n  );\r\n\r\n  // Rapor eklemek için fonksiyon\r\n  const addReport = (reportId, reportData) => {\r\n    setReports((prevReports) => ({\r\n      ...prevReports,\r\n      [reportId]: reportData,\r\n    }));\r\n  };\r\n\r\n  // Rapor silmek için fonksiyon\r\n  const removeReport = (reportId) => {\r\n    setReports((prevReports) => {\r\n      const updatedReports = { ...prevReports };\r\n      delete updatedReports[reportId];\r\n      return updatedReports;\r\n    });\r\n  };\r\n\r\n  // Raporları localStorage'e kaydetmek\r\n  useEffect(() => {\r\n    localStorage.setItem(\"reports\", JSON.stringify(reports));\r\n  }, [reports]);\r\n\r\n  return (\r\n    <UseContext.Provider\r\n      value={{\r\n        reports,\r\n        addReport,\r\n        removeReport,\r\n      }}\r\n    >\r\n      {children}\r\n    </UseContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useQuery = () => useContext(UseContext);\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,UAAU,cAAGN,aAAa,CAAC,CAAC,CAElC,MAAO,MAAM,CAAAO,WAAW,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACtC;AACA,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CACpCU,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAI,CAAC,CAClD,CAAC,CAED;AACA,KAAM,CAAAC,SAAS,CAAGA,CAACC,QAAQ,CAAEC,UAAU,GAAK,CAC1CP,UAAU,CAAEQ,WAAW,GAAM,CAC3B,GAAGA,WAAW,CACd,CAACF,QAAQ,EAAGC,UACd,CAAC,CAAC,CAAC,CACL,CAAC,CAED;AACA,KAAM,CAAAE,YAAY,CAAIH,QAAQ,EAAK,CACjCN,UAAU,CAAEQ,WAAW,EAAK,CAC1B,KAAM,CAAAE,cAAc,CAAG,CAAE,GAAGF,WAAY,CAAC,CACzC,MAAO,CAAAE,cAAc,CAACJ,QAAQ,CAAC,CAC/B,MAAO,CAAAI,cAAc,CACvB,CAAC,CAAC,CACJ,CAAC,CAED;AACAlB,SAAS,CAAC,IAAM,CACdW,YAAY,CAACQ,OAAO,CAAC,SAAS,CAAEV,IAAI,CAACW,SAAS,CAACb,OAAO,CAAC,CAAC,CAC1D,CAAC,CAAE,CAACA,OAAO,CAAC,CAAC,CAEb,mBACEL,IAAA,CAACC,UAAU,CAACkB,QAAQ,EAClBC,KAAK,CAAE,CACLf,OAAO,CACPM,SAAS,CACTI,YACF,CAAE,CAAAX,QAAA,CAEDA,QAAQ,CACU,CAAC,CAE1B,CAAC,CAED,MAAO,MAAM,CAAAiB,QAAQ,CAAGA,CAAA,GAAMzB,UAAU,CAACK,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}