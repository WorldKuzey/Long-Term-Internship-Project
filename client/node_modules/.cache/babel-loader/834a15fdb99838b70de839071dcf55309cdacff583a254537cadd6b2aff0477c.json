{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const UseContext=/*#__PURE__*/createContext();export const UseProvider=_ref=>{let{children}=_ref;const[selectedQuery,setSelectedQuery]=useState(sessionStorage.getItem(\"selectedQuery\")||\"\");const[selectedReportTitle,setSelectedReportTitle]=useState(sessionStorage.getItem(\"selectedReportTitle\")||\"\");const[selectedRecNo,setSelectedRecNo]=useState(sessionStorage.getItem(\"selectedRecNo\")||\"\");const[selectedInitRun,setSelectedInitRun]=useState(sessionStorage.getItem(\"selectedInitRun\")||\"\");useEffect(()=>{sessionStorage.setItem(\"selectedQuery\",selectedQuery);sessionStorage.setItem(\"selectedReportTitle\",selectedReportTitle);sessionStorage.setItem(\"selectedRecNo\",selectedRecNo);sessionStorage.setItem(\"selectedInitRun\",selectedInitRun);},[selectedQuery,selectedReportTitle,selectedRecNo,selectedInitRun]);return/*#__PURE__*/_jsx(UseContext.Provider,{value:{selectedQuery,setSelectedQuery,selectedReportTitle,setSelectedReportTitle,selectedRecNo,setSelectedRecNo,selectedInitRun,setSelectedInitRun},children:children});};export const useQuery=()=>useContext(UseContext);//TODO BURAYA PARAMETRE VE YA BİR DEĞER YOLLUCAZ O PARAMETREDEKİ DEĞER NE İSE ONU ALMASINI İSTİCEZ REFRESHLERKEN VE DİĞERLERİNİ ALMICAK BU SAYEDE İLK BAŞTA BÜTÜN  LOCAL DEĞERLERİNİ YAZDIRMASINI İSTESEK LOCALDE\n//criterionSayfasında yap ve onu sessiona ekle","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","UseContext","UseProvider","_ref","children","selectedQuery","setSelectedQuery","sessionStorage","getItem","selectedReportTitle","setSelectedReportTitle","selectedRecNo","setSelectedRecNo","selectedInitRun","setSelectedInitRun","setItem","Provider","value","useQuery"],"sources":["C:/Internship Project/client/src/pages/HomePage/useContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\nconst UseContext = createContext();\r\n\r\nexport const UseProvider = ({ children }) => {\r\n  const [selectedQuery, setSelectedQuery] = useState(\r\n    sessionStorage.getItem(\"selectedQuery\") || \"\"\r\n  );\r\n  const [selectedReportTitle, setSelectedReportTitle] = useState(\r\n    sessionStorage.getItem(\"selectedReportTitle\") || \"\"\r\n  );\r\n  const [selectedRecNo, setSelectedRecNo] = useState(\r\n    sessionStorage.getItem(\"selectedRecNo\") || \"\"\r\n  );\r\n  const [selectedInitRun, setSelectedInitRun] = useState(\r\n    sessionStorage.getItem(\"selectedInitRun\") || \"\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    sessionStorage.setItem(\"selectedQuery\", selectedQuery);\r\n    sessionStorage.setItem(\"selectedReportTitle\", selectedReportTitle);\r\n    sessionStorage.setItem(\"selectedRecNo\", selectedRecNo);\r\n    sessionStorage.setItem(\"selectedInitRun\", selectedInitRun);\r\n  }, [selectedQuery, selectedReportTitle, selectedRecNo, selectedInitRun]);\r\n\r\n  return (\r\n    <UseContext.Provider\r\n      value={{\r\n        selectedQuery,\r\n        setSelectedQuery,\r\n        selectedReportTitle,\r\n        setSelectedReportTitle,\r\n        selectedRecNo,\r\n        setSelectedRecNo,\r\n        selectedInitRun,\r\n        setSelectedInitRun,\r\n      }}\r\n    >\r\n      {children}\r\n    </UseContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useQuery = () => useContext(UseContext);\r\n\r\n//TODO BURAYA PARAMETRE VE YA BİR DEĞER YOLLUCAZ O PARAMETREDEKİ DEĞER NE İSE ONU ALMASINI İSTİCEZ REFRESHLERKEN VE DİĞERLERİNİ ALMICAK BU SAYEDE İLK BAŞTA BÜTÜN  LOCAL DEĞERLERİNİ YAZDIRMASINI İSTESEK LOCALDE\r\n\r\n//criterionSayfasında yap ve onu sessiona ekle\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,UAAU,cAAGN,aAAa,CAAC,CAAC,CAElC,MAAO,MAAM,CAAAO,WAAW,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACtC,KAAM,CAACE,aAAa,CAAEC,gBAAgB,CAAC,CAAGT,QAAQ,CAChDU,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC,EAAI,EAC7C,CAAC,CACD,KAAM,CAACC,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGb,QAAQ,CAC5DU,cAAc,CAACC,OAAO,CAAC,qBAAqB,CAAC,EAAI,EACnD,CAAC,CACD,KAAM,CAACG,aAAa,CAAEC,gBAAgB,CAAC,CAAGf,QAAQ,CAChDU,cAAc,CAACC,OAAO,CAAC,eAAe,CAAC,EAAI,EAC7C,CAAC,CACD,KAAM,CAACK,eAAe,CAAEC,kBAAkB,CAAC,CAAGjB,QAAQ,CACpDU,cAAc,CAACC,OAAO,CAAC,iBAAiB,CAAC,EAAI,EAC/C,CAAC,CAEDV,SAAS,CAAC,IAAM,CACdS,cAAc,CAACQ,OAAO,CAAC,eAAe,CAAEV,aAAa,CAAC,CACtDE,cAAc,CAACQ,OAAO,CAAC,qBAAqB,CAAEN,mBAAmB,CAAC,CAClEF,cAAc,CAACQ,OAAO,CAAC,eAAe,CAAEJ,aAAa,CAAC,CACtDJ,cAAc,CAACQ,OAAO,CAAC,iBAAiB,CAAEF,eAAe,CAAC,CAC5D,CAAC,CAAE,CAACR,aAAa,CAAEI,mBAAmB,CAAEE,aAAa,CAAEE,eAAe,CAAC,CAAC,CAExE,mBACEb,IAAA,CAACC,UAAU,CAACe,QAAQ,EAClBC,KAAK,CAAE,CACLZ,aAAa,CACbC,gBAAgB,CAChBG,mBAAmB,CACnBC,sBAAsB,CACtBC,aAAa,CACbC,gBAAgB,CAChBC,eAAe,CACfC,kBACF,CAAE,CAAAV,QAAA,CAEDA,QAAQ,CACU,CAAC,CAE1B,CAAC,CAED,MAAO,MAAM,CAAAc,QAAQ,CAAGA,CAAA,GAAMtB,UAAU,CAACK,UAAU,CAAC,CAEpD;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}