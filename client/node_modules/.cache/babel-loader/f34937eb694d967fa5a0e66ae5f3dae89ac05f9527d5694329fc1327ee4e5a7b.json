{"ast":null,"code":"var _jsxFileName = \"C:\\\\Internship Project\\\\client\\\\src\\\\pages\\\\ReportPage\\\\buttonReport.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReportButton() {\n  _s();\n  const [key, setKey] = useState([]);\n  const [value, setValue] = useState([]);\n  const fetchData = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:3000/report\");\n      setKey(Object.keys(response.data[0])); //FOR COLON\n\n      const valueArray = []; //TODO OK VALULERİ EKLYOR ARRAY'E\n\n      for (let i = 0; i < Object.values(response.data).length; i++) {\n        valueArray.push(Object.values(response.data[i]));\n      }\n      setValue(valueArray); //FOR ROW\n    } catch (error) {\n      console.error(\"Error fetching data\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchData,\n      className: \"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\",\n      children: \"Veriyi Getir\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), key.length > 0 && value.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-auto mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: key.map((item, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"px-4 py-2 bg-gray-200 text-gray-800\",\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: value.map((innerArray, outerIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: innerArray.map((item, innerIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"border px-4 py-2\",\n            children: item\n          }, innerIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 19\n          }, this))\n        }, outerIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(ReportButton, \"fbkCN8pxz2C9CZcAJWra67OqVwo=\");\n_c = ReportButton;\nexport default ReportButton;\n\n// TODO USE EFFECT VE AXİOS İLE BİLGİLERİ GETİR ORADAN DA ONLARI GRİDLE TABLO ŞEKLİNDE BUTONU CLİCKLEDİĞİNDE\n//TODO burada useState ile  aldığımız verileri  use effect içerisinde deStructere edelim key ve valuediye\nvar _c;\n$RefreshReg$(_c, \"ReportButton\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ReportButton","_s","key","setKey","value","setValue","fetchData","response","get","Object","keys","data","valueArray","i","values","length","push","error","console","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","innerArray","outerIndex","innerIndex","_c","$RefreshReg$"],"sources":["C:/Internship Project/client/src/pages/ReportPage/buttonReport.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction ReportButton() {\r\n  const [key, setKey] = useState([]);\r\n  const [value, setValue] = useState([]);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:3000/report\");\r\n\r\n      setKey(Object.keys(response.data[0])); //FOR COLON\r\n\r\n      const valueArray = []; //TODO OK VALULERİ EKLYOR ARRAY'E\r\n\r\n      for (let i = 0; i < Object.values(response.data).length; i++) {\r\n        valueArray.push(Object.values(response.data[i]));\r\n      }\r\n      setValue(valueArray); //FOR ROW\r\n    } catch (error) {\r\n      console.error(\"Error fetching data\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={fetchData}\r\n        className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\"\r\n      >\r\n        Veriyi Getir\r\n      </button>\r\n      {key.length > 0 && value.length > 0 && (\r\n        <table className=\"table-auto mt-4\">\r\n          <thead>\r\n            <tr>\r\n              {key.map((item, index) => (\r\n                <th key={index} className=\"px-4 py-2 bg-gray-200 text-gray-800\">\r\n                  {item}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {value.map((innerArray, outerIndex) => (\r\n              <tr key={outerIndex}>\r\n                {innerArray.map((item, innerIndex) => (\r\n                  <td key={innerIndex} className=\"border px-4 py-2\">\r\n                    {item}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReportButton;\r\n\r\n// TODO USE EFFECT VE AXİOS İLE BİLGİLERİ GETİR ORADAN DA ONLARI GRİDLE TABLO ŞEKLİNDE BUTONU CLİCKLEDİĞİNDE\r\n//TODO burada useState ile  aldığımız verileri  use effect içerisinde deStructere edelim key ve valuediye\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}