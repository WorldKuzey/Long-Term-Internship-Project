{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const UseContext=/*#__PURE__*/createContext();export const UseProvider=_ref=>{let{children}=_ref;const[reports,setReports]=useState(JSON.parse(localStorage.getItem(\"reports\"))||{});const updateReport=(reportId,data)=>{const updatedReports={...reports,[reportId]:data};setReports(updatedReports);localStorage.setItem(\"reports\",JSON.stringify(updatedReports));};const[selectedQuery,setSelectedQuery]=useState(\"\");const[selectedReportTitle,setSelectedReportTitle]=useState(\"\");const[selectedRecNo,setSelectedRecNo]=useState(\"\");const[selectedInitRun,setSelectedInitRun]=useState(\"\");useEffect(()=>{localStorage.setItem(\"selectedQuery\",selectedQuery);localStorage.setItem(\"selectedReportTitle\",selectedReportTitle);localStorage.setItem(\"selectedRecNo\",selectedRecNo);localStorage.setItem(\"selectedInitRun\",selectedInitRun);},[selectedQuery,selectedReportTitle,selectedRecNo,selectedInitRun]);return/*#__PURE__*/_jsx(UseContext.Provider,{value:{reports,updateReport,selectedQuery,setSelectedQuery,selectedReportTitle,setSelectedReportTitle,selectedRecNo,setSelectedRecNo,selectedInitRun,setSelectedInitRun},children:children});};export const useQuery=()=>useContext(UseContext);","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","UseContext","UseProvider","_ref","children","reports","setReports","JSON","parse","localStorage","getItem","updateReport","reportId","data","updatedReports","setItem","stringify","selectedQuery","setSelectedQuery","selectedReportTitle","setSelectedReportTitle","selectedRecNo","setSelectedRecNo","selectedInitRun","setSelectedInitRun","Provider","value","useQuery"],"sources":["C:/Internship Project/client/src/pages/HomePage/useContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\nconst UseContext = createContext();\r\n\r\nexport const UseProvider = ({ children }) => {\r\n  const [reports, setReports] = useState(\r\n    JSON.parse(localStorage.getItem(\"reports\")) || {}\r\n  );\r\n\r\n  const updateReport = (reportId, data) => {\r\n    const updatedReports = { ...reports, [reportId]: data };\r\n    setReports(updatedReports);\r\n    localStorage.setItem(\"reports\", JSON.stringify(updatedReports));\r\n  };\r\n\r\n  const [selectedQuery, setSelectedQuery] = useState(\"\");\r\n  const [selectedReportTitle, setSelectedReportTitle] = useState(\"\");\r\n  const [selectedRecNo, setSelectedRecNo] = useState(\"\");\r\n  const [selectedInitRun, setSelectedInitRun] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"selectedQuery\", selectedQuery);\r\n    localStorage.setItem(\"selectedReportTitle\", selectedReportTitle);\r\n    localStorage.setItem(\"selectedRecNo\", selectedRecNo);\r\n    localStorage.setItem(\"selectedInitRun\", selectedInitRun);\r\n  }, [selectedQuery, selectedReportTitle, selectedRecNo, selectedInitRun]);\r\n\r\n  return (\r\n    <UseContext.Provider\r\n      value={{\r\n        reports,\r\n        updateReport,\r\n        selectedQuery,\r\n        setSelectedQuery,\r\n        selectedReportTitle,\r\n        setSelectedReportTitle,\r\n        selectedRecNo,\r\n        setSelectedRecNo,\r\n        selectedInitRun,\r\n        setSelectedInitRun,\r\n      }}\r\n    >\r\n      {children}\r\n    </UseContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useQuery = () => useContext(UseContext);\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,UAAU,cAAGN,aAAa,CAAC,CAAC,CAElC,MAAO,MAAM,CAAAO,WAAW,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACtC,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CACpCU,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAI,CAAC,CAClD,CAAC,CAED,KAAM,CAAAC,YAAY,CAAGA,CAACC,QAAQ,CAAEC,IAAI,GAAK,CACvC,KAAM,CAAAC,cAAc,CAAG,CAAE,GAAGT,OAAO,CAAE,CAACO,QAAQ,EAAGC,IAAK,CAAC,CACvDP,UAAU,CAACQ,cAAc,CAAC,CAC1BL,YAAY,CAACM,OAAO,CAAC,SAAS,CAAER,IAAI,CAACS,SAAS,CAACF,cAAc,CAAC,CAAC,CACjE,CAAC,CAED,KAAM,CAACG,aAAa,CAAEC,gBAAgB,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAACsB,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGvB,QAAQ,CAAC,EAAE,CAAC,CAClE,KAAM,CAACwB,aAAa,CAAEC,gBAAgB,CAAC,CAAGzB,QAAQ,CAAC,EAAE,CAAC,CACtD,KAAM,CAAC0B,eAAe,CAAEC,kBAAkB,CAAC,CAAG3B,QAAQ,CAAC,EAAE,CAAC,CAE1DC,SAAS,CAAC,IAAM,CACdW,YAAY,CAACM,OAAO,CAAC,eAAe,CAAEE,aAAa,CAAC,CACpDR,YAAY,CAACM,OAAO,CAAC,qBAAqB,CAAEI,mBAAmB,CAAC,CAChEV,YAAY,CAACM,OAAO,CAAC,eAAe,CAAEM,aAAa,CAAC,CACpDZ,YAAY,CAACM,OAAO,CAAC,iBAAiB,CAAEQ,eAAe,CAAC,CAC1D,CAAC,CAAE,CAACN,aAAa,CAAEE,mBAAmB,CAAEE,aAAa,CAAEE,eAAe,CAAC,CAAC,CAExE,mBACEvB,IAAA,CAACC,UAAU,CAACwB,QAAQ,EAClBC,KAAK,CAAE,CACLrB,OAAO,CACPM,YAAY,CACZM,aAAa,CACbC,gBAAgB,CAChBC,mBAAmB,CACnBC,sBAAsB,CACtBC,aAAa,CACbC,gBAAgB,CAChBC,eAAe,CACfC,kBACF,CAAE,CAAApB,QAAA,CAEDA,QAAQ,CACU,CAAC,CAE1B,CAAC,CAED,MAAO,MAAM,CAAAuB,QAAQ,CAAGA,CAAA,GAAM/B,UAAU,CAACK,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}