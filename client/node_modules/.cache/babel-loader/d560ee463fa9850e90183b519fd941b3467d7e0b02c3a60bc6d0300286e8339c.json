{"ast":null,"code":"import React,{useState,useEffect,createContext,useContext}from\"react\";import{Link}from\"react-router-dom\";import axios from\"axios\";//Bağlamı Oluştur\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TreeViewContext=/*#__PURE__*/createContext();function TreeView(){//const [recNo, setRecNo] = useState([]); //TODO REPORT PAGE SAYFASINA AKTARILACAK PARAMETRİK OLARAK\n//const [reportTitle, setReportTitle] = useState([]);\nconst[menuName,setMenuName]=useState([]);// TODO REPORT PAGE SAYFASINA AKTARILACAK SAYFANIN BAŞLIĞI  OLARAK\nconst[query,setQuery]=useState([]);// TODO REPORT PAGE SAYFASINA AKATARIALACAK SORGU OLARAK  OLARAK\n//const [initRun, setInitRun] = useState([]); // TODO REPORT PAGE SAYFASINA AKATARILACAK DEĞER  OLARAK\nuseEffect(()=>{async function fetchMenuItems(){try{const response=await axios.get(\"/tree-view\");const menuArray=[];const queryArray=[];for(let i=0;i<Object.values(response.data).length;i++){menuArray.push(Object.values(response.data[i])[2]);queryArray.push(Object.values(response.data[i])[6]);}setMenuName(menuArray);setQuery(queryArray);console.log(queryArray);}catch(error){console.error(\"Failed to fetch menu items: \",error);}}fetchMenuItems();},[]);// Stateleri içeren bağlamı oluştur\nconst treeViewContextValue={//recNo,\n//reportTitle,\n// // query, //TODO BURADAKİ QUERY ÖNEMLİ ÇÜNKÜ HANGİ MENÜYÜ SEÇERSE ONUN QUERY Sİ Nİ DİĞER KOMPONENTE AKTARMAK GEREKİR VE BUNU YAPMAK İÇİN DE TIKLADIĞIMIZ MENU İLE QUERY Yİ EŞLEŞTİRMEK GEREKLİ YANİ TIKLANILAN ÖĞE KENDİ TABLOSUNDAKİ BU SATIRLARI TETİKLEMELİDİR\n//initRun,\n};//TODO Link tıklandığında ilgili query değerini konsola yazdır\n//TODO Link tıklandığında query[index] değierini useContext ile diğer komponente almamız gerek bunu nasul yapıcaz?\nconst handleClick=index=>{console.log(\"Tıklanan menünün query değeri:\",query[index]);};return/*#__PURE__*/_jsx(TreeViewContext.Provider,{value:treeViewContextValue,children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"RAPORLAR\"}),/*#__PURE__*/_jsx(\"ul\",{children:menuName.map((menuItem,index)=>/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:\"/report-page\",query:query[index],onClick:()=>handleClick(index),children:menuItem})},index))})]})});}export default TreeView;","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","Link","axios","jsx","_jsx","jsxs","_jsxs","TreeViewContext","TreeView","menuName","setMenuName","query","setQuery","fetchMenuItems","response","get","menuArray","queryArray","i","Object","values","data","length","push","console","log","error","treeViewContextValue","handleClick","index","Provider","value","children","map","menuItem","to","onClick"],"sources":["C:/Internship Project/client/src/pages/HomePage/treeView.js"],"sourcesContent":["import React, { useState, useEffect, createContext, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n//Bağlamı Oluştur\r\nconst TreeViewContext = createContext();\r\n\r\nfunction TreeView() {\r\n  //const [recNo, setRecNo] = useState([]); //TODO REPORT PAGE SAYFASINA AKTARILACAK PARAMETRİK OLARAK\r\n  //const [reportTitle, setReportTitle] = useState([]);\r\n  const [menuName, setMenuName] = useState([]); // TODO REPORT PAGE SAYFASINA AKTARILACAK SAYFANIN BAŞLIĞI  OLARAK\r\n  const [query, setQuery] = useState([]); // TODO REPORT PAGE SAYFASINA AKATARIALACAK SORGU OLARAK  OLARAK\r\n  //const [initRun, setInitRun] = useState([]); // TODO REPORT PAGE SAYFASINA AKATARILACAK DEĞER  OLARAK\r\n\r\n  useEffect(() => {\r\n    async function fetchMenuItems() {\r\n      try {\r\n        const response = await axios.get(\"/tree-view\");\r\n\r\n        const menuArray = [];\r\n        const queryArray = [];\r\n        for (let i = 0; i < Object.values(response.data).length; i++) {\r\n          menuArray.push(Object.values(response.data[i])[2]);\r\n          queryArray.push(Object.values(response.data[i])[6]);\r\n        }\r\n        setMenuName(menuArray);\r\n        setQuery(queryArray);\r\n        console.log(queryArray);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch menu items: \", error);\r\n      }\r\n    }\r\n    fetchMenuItems();\r\n  }, []);\r\n\r\n  // Stateleri içeren bağlamı oluştur\r\n  const treeViewContextValue = {\r\n    //recNo,\r\n    //reportTitle,\r\n    // // query, //TODO BURADAKİ QUERY ÖNEMLİ ÇÜNKÜ HANGİ MENÜYÜ SEÇERSE ONUN QUERY Sİ Nİ DİĞER KOMPONENTE AKTARMAK GEREKİR VE BUNU YAPMAK İÇİN DE TIKLADIĞIMIZ MENU İLE QUERY Yİ EŞLEŞTİRMEK GEREKLİ YANİ TIKLANILAN ÖĞE KENDİ TABLOSUNDAKİ BU SATIRLARI TETİKLEMELİDİR\r\n    //initRun,\r\n  };\r\n  //TODO Link tıklandığında ilgili query değerini konsola yazdır\r\n  //TODO Link tıklandığında query[index] değierini useContext ile diğer komponente almamız gerek bunu nasul yapıcaz?\r\n  const handleClick = (index) => {\r\n    console.log(\"Tıklanan menünün query değeri:\", query[index]);\r\n  };\r\n\r\n  return (\r\n    <TreeViewContext.Provider value={treeViewContextValue}>\r\n      <div>\r\n        <h1>RAPORLAR</h1>\r\n        <ul>\r\n          {menuName.map((menuItem, index) => (\r\n            <li key={index}>\r\n              {/* Menü adı yerine index numarasını kullan */}\r\n              <Link\r\n                to={`/report-page`}\r\n                query={query[index]}\r\n                onClick={() => handleClick(index)}\r\n              >\r\n                {menuItem}\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </TreeViewContext.Provider>\r\n  );\r\n}\r\n\r\nexport default TreeView;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,aAAa,CAAEC,UAAU,KAAQ,OAAO,CAC7E,OAASC,IAAI,KAAQ,kBAAkB,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,eAAe,cAAGR,aAAa,CAAC,CAAC,CAEvC,QAAS,CAAAS,QAAQA,CAAA,CAAG,CAClB;AACA;AACA,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAAE;AAC9C,KAAM,CAACc,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAAE;AACxC;AAEAC,SAAS,CAAC,IAAM,CACd,cAAe,CAAAe,cAAcA,CAAA,CAAG,CAC9B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAZ,KAAK,CAACa,GAAG,CAAC,YAAY,CAAC,CAE9C,KAAM,CAAAC,SAAS,CAAG,EAAE,CACpB,KAAM,CAAAC,UAAU,CAAG,EAAE,CACrB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGC,MAAM,CAACC,MAAM,CAACN,QAAQ,CAACO,IAAI,CAAC,CAACC,MAAM,CAAEJ,CAAC,EAAE,CAAE,CAC5DF,SAAS,CAACO,IAAI,CAACJ,MAAM,CAACC,MAAM,CAACN,QAAQ,CAACO,IAAI,CAACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAClDD,UAAU,CAACM,IAAI,CAACJ,MAAM,CAACC,MAAM,CAACN,QAAQ,CAACO,IAAI,CAACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACrD,CACAR,WAAW,CAACM,SAAS,CAAC,CACtBJ,QAAQ,CAACK,UAAU,CAAC,CACpBO,OAAO,CAACC,GAAG,CAACR,UAAU,CAAC,CACzB,CAAE,MAAOS,KAAK,CAAE,CACdF,OAAO,CAACE,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CACF,CACAb,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAc,oBAAoB,CAAG,CAC3B;AACA;AACA;AACA;AAAA,CACD,CACD;AACA;AACA,KAAM,CAAAC,WAAW,CAAIC,KAAK,EAAK,CAC7BL,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAEd,KAAK,CAACkB,KAAK,CAAC,CAAC,CAC7D,CAAC,CAED,mBACEzB,IAAA,CAACG,eAAe,CAACuB,QAAQ,EAACC,KAAK,CAAEJ,oBAAqB,CAAAK,QAAA,cACpD1B,KAAA,QAAA0B,QAAA,eACE5B,IAAA,OAAA4B,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjB5B,IAAA,OAAA4B,QAAA,CACGvB,QAAQ,CAACwB,GAAG,CAAC,CAACC,QAAQ,CAAEL,KAAK,gBAC5BzB,IAAA,OAAA4B,QAAA,cAEE5B,IAAA,CAACH,IAAI,EACHkC,EAAE,eAAiB,CACnBxB,KAAK,CAAEA,KAAK,CAACkB,KAAK,CAAE,CACpBO,OAAO,CAAEA,CAAA,GAAMR,WAAW,CAACC,KAAK,CAAE,CAAAG,QAAA,CAEjCE,QAAQ,CACL,CAAC,EARAL,KASL,CACL,CAAC,CACA,CAAC,EACF,CAAC,CACkB,CAAC,CAE/B,CAEA,cAAe,CAAArB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}