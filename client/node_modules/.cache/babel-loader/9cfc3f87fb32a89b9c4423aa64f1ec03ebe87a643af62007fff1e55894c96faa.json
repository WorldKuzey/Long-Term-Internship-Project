{"ast":null,"code":"// Sidebar.js\nimport React,{useState,useEffect}from\"react\";//import axios from \"axios\";\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Sidebar=()=>{//   // State to store the fetched data\n//   const [data, setData] = useState([]);\n//   // State to handle loading state\n//   const [loading, setLoading] = useState(true);\n//   // State to handle error state\n//   const [error, setError] = useState(null);\n//   useEffect(() => {\n//     // Function to fetch data from the server\n//     const fetchData = async () => {\n//       try {\n//         // Make HTTP request to fetch data\n//         const response = await axios.get(\"/api/sidebar-data\");\n//         // Set the fetched data to state\n//         setData(response.data);\n//         // Set loading state to false\n//         setLoading(false);\n//       } catch (error) {\n//         // Set error state if request fails\n//         setError(error.message);\n//         // Set loading state to false\n//         setLoading(false);\n//       }\n//     };\n// Call the fetchData function when component mounts\n// fetchData();\n// Clean up function to cancel the request if component unmounts\n//     return () => {\n//       // cleanup\n//     };\n//   }, []); // Empty dependency array to run only once on component mount\n//   // Render loading state if data is being fetched\n//   if (loading) {\n//     return <div>Loading...</div>;\n//   }\n//   // Render error state if request fails\n//   if (error) {\n//     return <div>Error: {error}</div>;\n//   }\n// Render sidebar with fetched data\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar bg-gray-200 border border-gray-300 p-4 rounded\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold mb-4\",children:\"Raporlar\"}),/*#__PURE__*/_jsx(\"ul\",{children:/*#__PURE__*/_jsx(\"li\",{className:\"text-gray-700 mb-2\"})})]});};export default Sidebar;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Sidebar","className","children"],"sources":["C:/Internship Project/client/src/pages/HomePage/sidebar/sideBar.js"],"sourcesContent":["// Sidebar.js\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\n//import axios from \"axios\";\r\n\r\nconst Sidebar = () => {\r\n  //   // State to store the fetched data\r\n  //   const [data, setData] = useState([]);\r\n  //   // State to handle loading state\r\n  //   const [loading, setLoading] = useState(true);\r\n  //   // State to handle error state\r\n  //   const [error, setError] = useState(null);\r\n\r\n  //   useEffect(() => {\r\n  //     // Function to fetch data from the server\r\n  //     const fetchData = async () => {\r\n  //       try {\r\n  //         // Make HTTP request to fetch data\r\n  //         const response = await axios.get(\"/api/sidebar-data\");\r\n  //         // Set the fetched data to state\r\n  //         setData(response.data);\r\n  //         // Set loading state to false\r\n  //         setLoading(false);\r\n  //       } catch (error) {\r\n  //         // Set error state if request fails\r\n  //         setError(error.message);\r\n  //         // Set loading state to false\r\n  //         setLoading(false);\r\n  //       }\r\n  //     };\r\n\r\n  // Call the fetchData function when component mounts\r\n  // fetchData();\r\n\r\n  // Clean up function to cancel the request if component unmounts\r\n  //     return () => {\r\n  //       // cleanup\r\n  //     };\r\n  //   }, []); // Empty dependency array to run only once on component mount\r\n\r\n  //   // Render loading state if data is being fetched\r\n  //   if (loading) {\r\n  //     return <div>Loading...</div>;\r\n  //   }\r\n\r\n  //   // Render error state if request fails\r\n  //   if (error) {\r\n  //     return <div>Error: {error}</div>;\r\n  //   }\r\n\r\n  // Render sidebar with fetched data\r\n  return (\r\n    <div className=\"sidebar bg-gray-200 border border-gray-300 p-4 rounded\">\r\n      <h2 className=\"text-xl font-semibold mb-4\">Raporlar</h2>\r\n      <ul>\r\n        <li className=\"text-gray-700 mb-2\"></li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEA,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA,mBACED,KAAA,QAAKE,SAAS,CAAC,wDAAwD,CAAAC,QAAA,eACrEL,IAAA,OAAII,SAAS,CAAC,4BAA4B,CAAAC,QAAA,CAAC,UAAQ,CAAI,CAAC,cACxDL,IAAA,OAAAK,QAAA,cACEL,IAAA,OAAII,SAAS,CAAC,oBAAoB,CAAK,CAAC,CACtC,CAAC,EACF,CAAC,CAEV,CAAC,CAED,cAAe,CAAAD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}