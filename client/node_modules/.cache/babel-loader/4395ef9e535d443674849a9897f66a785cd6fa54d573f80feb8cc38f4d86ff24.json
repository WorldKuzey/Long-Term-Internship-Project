{"ast":null,"code":"// import React, { createContext, useContext, useState } from \"react\";\n// const UseContext = createContext();\n// export const UseProvider = ({ children }) => {\n//   const [selectedRecNo, setSelectedRecNo] = useState(\"\");\n//   const [selectedQuery, setSelectedQuery] = useState(\"\");\n//   const [selectedReportTitle, setSelectedReportTitle] = useState(\"\");\n//   const [selectedInitRun, setSelectedInitRun] = useState(\"\");\n//   return (\n//     <UseContext.Provider\n//       value={{\n//         selectedQuery,\n//         setSelectedQuery,\n//         selectedReportTitle,\n//         setSelectedReportTitle,\n//         selectedRecNo,\n//         setSelectedRecNo,\n//         selectedInitRun,\n//         setSelectedInitRun,\n//       }}\n//     >\n//       {children}\n//     </UseContext.Provider>\n//   );\n// };\n// export const useQuery = () => useContext(UseContext);","map":{"version":3,"names":[],"sources":["C:/Internship Project/client/src/pages/HomePage/useContext.js"],"sourcesContent":["// import React, { createContext, useContext, useState } from \"react\";\r\n\r\n// const UseContext = createContext();\r\n\r\n// export const UseProvider = ({ children }) => {\r\n//   const [selectedRecNo, setSelectedRecNo] = useState(\"\");\r\n//   const [selectedQuery, setSelectedQuery] = useState(\"\");\r\n//   const [selectedReportTitle, setSelectedReportTitle] = useState(\"\");\r\n//   const [selectedInitRun, setSelectedInitRun] = useState(\"\");\r\n\r\n//   return (\r\n//     <UseContext.Provider\r\n//       value={{\r\n//         selectedQuery,\r\n//         setSelectedQuery,\r\n//         selectedReportTitle,\r\n//         setSelectedReportTitle,\r\n//         selectedRecNo,\r\n//         setSelectedRecNo,\r\n//         selectedInitRun,\r\n//         setSelectedInitRun,\r\n//       }}\r\n//     >\r\n//       {children}\r\n//     </UseContext.Provider>\r\n//   );\r\n// };\r\n\r\n// export const useQuery = () => useContext(UseContext);\r\n"],"mappings":"AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}