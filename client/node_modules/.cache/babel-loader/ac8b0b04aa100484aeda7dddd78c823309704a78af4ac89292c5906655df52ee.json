{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const UseContext=/*#__PURE__*/createContext();export const UseProvider=_ref=>{let{children}=_ref;const[selectedQuery,setSelectedQuery]=useState(localStorage.getItem(\"selectedQuery\"));const[selectedReportTitle,setSelectedReportTitle]=useState(localStorage.getItem(\"selectedReportTitle\"));const[selectedRecNo,setSelectedRecNo]=useState(localStorage.getItem(\"selectedRecNo\"));console.log(selectedReportTitle,selectedRecNo,selectedQuery);//const [selectedInitRun, setSelectedInitRun] = useState();\n// localStorage.getItem(selectedInitRun);\n//TODO BURAYA PARAMETRE VE YA BİR DEĞER YOLLUCAZ O PARAMETREDEKİ DEĞER NE İSE ONU ALMASINI İSTİCEZ REFRESHLERKEN VE DİĞERLERİNİ ALMICAK BU SAYEDE İLK\nuseEffect(()=>{// Bu etkileşim, yalnızca belirli değişkenler değiştiğinde tetiklenecek\nlocalStorage.setItem(\"selectedQuery\",selectedQuery);//TODO YER DEĞİŞİKLİĞİ YAPAR \"SELE\"\nlocalStorage.setItem(\"selectedReportTitle\",selectedReportTitle);localStorage.setItem(\"selectedRecNo\",selectedRecNo);});return/*#__PURE__*/_jsx(UseContext.Provider,{value:{selectedQuery,setSelectedQuery,selectedReportTitle,setSelectedReportTitle,selectedRecNo,setSelectedRecNo//selectedInitRun,\n//setSelectedInitRun,\n},children:children});};export const useQuery=()=>useContext(UseContext);// TODO BURADA YAPMAM GEREKEN SET EDİLİRKEN KONTROL ETMESİ ÖRNEĞİN YENİ Bİ ŞEY SET EDİLCEKSE ESKİSİNE NİN RECnOSUNA baksın var ise set etmesin yok ise altına doğru set etmeli bunu nasıl yapcaz","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","UseContext","UseProvider","_ref","children","selectedQuery","setSelectedQuery","localStorage","getItem","selectedReportTitle","setSelectedReportTitle","selectedRecNo","setSelectedRecNo","console","log","setItem","Provider","value","useQuery"],"sources":["C:/Internship Project/client/src/pages/HomePage/useContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\nconst UseContext = createContext();\r\n\r\nexport const UseProvider = ({ children }) => {\r\n  const [selectedQuery, setSelectedQuery] = useState(\r\n    localStorage.getItem(\"selectedQuery\")\r\n  );\r\n  const [selectedReportTitle, setSelectedReportTitle] = useState(\r\n    localStorage.getItem(\"selectedReportTitle\")\r\n  );\r\n  const [selectedRecNo, setSelectedRecNo] = useState(\r\n    localStorage.getItem(\"selectedRecNo\")\r\n  );\r\n\r\n  console.log(selectedReportTitle, selectedRecNo, selectedQuery);\r\n\r\n  //const [selectedInitRun, setSelectedInitRun] = useState();\r\n  // localStorage.getItem(selectedInitRun);\r\n\r\n  //TODO BURAYA PARAMETRE VE YA BİR DEĞER YOLLUCAZ O PARAMETREDEKİ DEĞER NE İSE ONU ALMASINI İSTİCEZ REFRESHLERKEN VE DİĞERLERİNİ ALMICAK BU SAYEDE İLK\r\n\r\n  useEffect(() => {\r\n    // Bu etkileşim, yalnızca belirli değişkenler değiştiğinde tetiklenecek\r\n    localStorage.setItem(\"selectedQuery\", selectedQuery); //TODO YER DEĞİŞİKLİĞİ YAPAR \"SELE\"\r\n    localStorage.setItem(\"selectedReportTitle\", selectedReportTitle);\r\n    localStorage.setItem(\"selectedRecNo\", selectedRecNo);\r\n  });\r\n\r\n  return (\r\n    <UseContext.Provider\r\n      value={{\r\n        selectedQuery,\r\n        setSelectedQuery,\r\n        selectedReportTitle,\r\n        setSelectedReportTitle,\r\n        selectedRecNo,\r\n        setSelectedRecNo,\r\n        //selectedInitRun,\r\n        //setSelectedInitRun,\r\n      }}\r\n    >\r\n      {children}\r\n    </UseContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useQuery = () => useContext(UseContext);\r\n\r\n// TODO BURADA YAPMAM GEREKEN SET EDİLİRKEN KONTROL ETMESİ ÖRNEĞİN YENİ Bİ ŞEY SET EDİLCEKSE ESKİSİNE NİN RECnOSUNA baksın var ise set etmesin yok ise altına doğru set etmeli bunu nasıl yapcaz\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,UAAU,cAAGN,aAAa,CAAC,CAAC,CAElC,MAAO,MAAM,CAAAO,WAAW,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACtC,KAAM,CAACE,aAAa,CAAEC,gBAAgB,CAAC,CAAGT,QAAQ,CAChDU,YAAY,CAACC,OAAO,CAAC,eAAe,CACtC,CAAC,CACD,KAAM,CAACC,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGb,QAAQ,CAC5DU,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAC5C,CAAC,CACD,KAAM,CAACG,aAAa,CAAEC,gBAAgB,CAAC,CAAGf,QAAQ,CAChDU,YAAY,CAACC,OAAO,CAAC,eAAe,CACtC,CAAC,CAEDK,OAAO,CAACC,GAAG,CAACL,mBAAmB,CAAEE,aAAa,CAAEN,aAAa,CAAC,CAE9D;AACA;AAEA;AAEAP,SAAS,CAAC,IAAM,CACd;AACAS,YAAY,CAACQ,OAAO,CAAC,eAAe,CAAEV,aAAa,CAAC,CAAE;AACtDE,YAAY,CAACQ,OAAO,CAAC,qBAAqB,CAAEN,mBAAmB,CAAC,CAChEF,YAAY,CAACQ,OAAO,CAAC,eAAe,CAAEJ,aAAa,CAAC,CACtD,CAAC,CAAC,CAEF,mBACEX,IAAA,CAACC,UAAU,CAACe,QAAQ,EAClBC,KAAK,CAAE,CACLZ,aAAa,CACbC,gBAAgB,CAChBG,mBAAmB,CACnBC,sBAAsB,CACtBC,aAAa,CACbC,gBACA;AACA;AACF,CAAE,CAAAR,QAAA,CAEDA,QAAQ,CACU,CAAC,CAE1B,CAAC,CAED,MAAO,MAAM,CAAAc,QAAQ,CAAGA,CAAA,GAAMtB,UAAU,CAACK,UAAU,CAAC,CAEpD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}