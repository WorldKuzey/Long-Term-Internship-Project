{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const UseContext=/*#__PURE__*/createContext();export const UseProvider=_ref=>{let{children}=_ref;const[reports,setReports]=useState([]);useEffect(()=>{// localStorage'den raporları al\nconst storedReports=JSON.parse(localStorage.getItem(\"reports\"))||[];setReports(storedReports);},[]);const addReport=report=>{const updatedReports=[...reports,report];setReports(updatedReports);localStorage.setItem(\"reports\",JSON.stringify(updatedReports));};const[selectedQuery,setSelectedQuery]=useState(localStorage.getItem(\"selectedQuery\")||\"\");const[selectedReportTitle,setSelectedReportTitle]=useState(localStorage.getItem(\"selectedReportTitle\")||\"\");const[selectedRecNo,setSelectedRecNo]=useState(localStorage.getItem(\"selectedRecNo\")||\"\");const[selectedInitRun,setSelectedInitRun]=useState(localStorage.getItem(\"selectedInitRun\")||\"\");useEffect(()=>{localStorage.setItem(\"selectedQuery\",selectedQuery);localStorage.setItem(\"selectedReportTitle\",selectedReportTitle);localStorage.setItem(\"selectedRecNo\",selectedRecNo);localStorage.setItem(\"selectedInitRun\",selectedInitRun);},[selectedQuery,selectedReportTitle,selectedRecNo,selectedInitRun]);return/*#__PURE__*/_jsx(UseContext.Provider,{value:{reports,addReport,selectedQuery,setSelectedQuery,selectedReportTitle,setSelectedReportTitle,selectedRecNo,setSelectedRecNo,selectedInitRun,setSelectedInitRun},children:children});};export const useQuery=()=>useContext(UseContext);","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","UseContext","UseProvider","_ref","children","reports","setReports","storedReports","JSON","parse","localStorage","getItem","addReport","report","updatedReports","setItem","stringify","selectedQuery","setSelectedQuery","selectedReportTitle","setSelectedReportTitle","selectedRecNo","setSelectedRecNo","selectedInitRun","setSelectedInitRun","Provider","value","useQuery"],"sources":["C:/Internship Project/client/src/pages/HomePage/useContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\r\n\r\nconst UseContext = createContext();\r\n\r\nexport const UseProvider = ({ children }) => {\r\n  const [reports, setReports] = useState([]);\r\n  useEffect(() => {\r\n    // localStorage'den raporları al\r\n    const storedReports = JSON.parse(localStorage.getItem(\"reports\")) || [];\r\n    setReports(storedReports);\r\n  }, []);\r\n  const addReport = (report) => {\r\n    const updatedReports = [...reports, report];\r\n    setReports(updatedReports);\r\n    localStorage.setItem(\"reports\", JSON.stringify(updatedReports));\r\n  };\r\n\r\n  const [selectedQuery, setSelectedQuery] = useState(\r\n    localStorage.getItem(\"selectedQuery\") || \"\"\r\n  );\r\n  const [selectedReportTitle, setSelectedReportTitle] = useState(\r\n    localStorage.getItem(\"selectedReportTitle\") || \"\"\r\n  );\r\n  const [selectedRecNo, setSelectedRecNo] = useState(\r\n    localStorage.getItem(\"selectedRecNo\") || \"\"\r\n  );\r\n  const [selectedInitRun, setSelectedInitRun] = useState(\r\n    localStorage.getItem(\"selectedInitRun\") || \"\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"selectedQuery\", selectedQuery);\r\n    localStorage.setItem(\"selectedReportTitle\", selectedReportTitle);\r\n    localStorage.setItem(\"selectedRecNo\", selectedRecNo);\r\n    localStorage.setItem(\"selectedInitRun\", selectedInitRun);\r\n  }, [selectedQuery, selectedReportTitle, selectedRecNo, selectedInitRun]);\r\n\r\n  return (\r\n    <UseContext.Provider\r\n      value={{\r\n        reports,\r\n        addReport,\r\n        selectedQuery,\r\n        setSelectedQuery,\r\n        selectedReportTitle,\r\n        setSelectedReportTitle,\r\n        selectedRecNo,\r\n        setSelectedRecNo,\r\n        selectedInitRun,\r\n        setSelectedInitRun,\r\n      }}\r\n    >\r\n      {children}\r\n    </UseContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useQuery = () => useContext(UseContext);\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,UAAU,cAAGN,aAAa,CAAC,CAAC,CAElC,MAAO,MAAM,CAAAO,WAAW,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACtC,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC1CC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAS,aAAa,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAI,EAAE,CACvEL,UAAU,CAACC,aAAa,CAAC,CAC3B,CAAC,CAAE,EAAE,CAAC,CACN,KAAM,CAAAK,SAAS,CAAIC,MAAM,EAAK,CAC5B,KAAM,CAAAC,cAAc,CAAG,CAAC,GAAGT,OAAO,CAAEQ,MAAM,CAAC,CAC3CP,UAAU,CAACQ,cAAc,CAAC,CAC1BJ,YAAY,CAACK,OAAO,CAAC,SAAS,CAAEP,IAAI,CAACQ,SAAS,CAACF,cAAc,CAAC,CAAC,CACjE,CAAC,CAED,KAAM,CAACG,aAAa,CAAEC,gBAAgB,CAAC,CAAGrB,QAAQ,CAChDa,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,EAAI,EAC3C,CAAC,CACD,KAAM,CAACQ,mBAAmB,CAAEC,sBAAsB,CAAC,CAAGvB,QAAQ,CAC5Da,YAAY,CAACC,OAAO,CAAC,qBAAqB,CAAC,EAAI,EACjD,CAAC,CACD,KAAM,CAACU,aAAa,CAAEC,gBAAgB,CAAC,CAAGzB,QAAQ,CAChDa,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,EAAI,EAC3C,CAAC,CACD,KAAM,CAACY,eAAe,CAAEC,kBAAkB,CAAC,CAAG3B,QAAQ,CACpDa,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,EAAI,EAC7C,CAAC,CAEDb,SAAS,CAAC,IAAM,CACdY,YAAY,CAACK,OAAO,CAAC,eAAe,CAAEE,aAAa,CAAC,CACpDP,YAAY,CAACK,OAAO,CAAC,qBAAqB,CAAEI,mBAAmB,CAAC,CAChET,YAAY,CAACK,OAAO,CAAC,eAAe,CAAEM,aAAa,CAAC,CACpDX,YAAY,CAACK,OAAO,CAAC,iBAAiB,CAAEQ,eAAe,CAAC,CAC1D,CAAC,CAAE,CAACN,aAAa,CAAEE,mBAAmB,CAAEE,aAAa,CAAEE,eAAe,CAAC,CAAC,CAExE,mBACEvB,IAAA,CAACC,UAAU,CAACwB,QAAQ,EAClBC,KAAK,CAAE,CACLrB,OAAO,CACPO,SAAS,CACTK,aAAa,CACbC,gBAAgB,CAChBC,mBAAmB,CACnBC,sBAAsB,CACtBC,aAAa,CACbC,gBAAgB,CAChBC,eAAe,CACfC,kBACF,CAAE,CAAApB,QAAA,CAEDA,QAAQ,CACU,CAAC,CAE1B,CAAC,CAED,MAAO,MAAM,CAAAuB,QAAQ,CAAGA,CAAA,GAAM/B,UAAU,CAACK,UAAU,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}