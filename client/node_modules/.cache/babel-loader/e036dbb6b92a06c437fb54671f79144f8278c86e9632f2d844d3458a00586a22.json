{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{Link}from\"react-router-dom\";import axios from\"axios\";import{useQuery}from\"./QueryContext\";//Bağlamı Oluştur\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function TreeView(){//const [recNo, setRecNo] = useState([]); //TODO REPORT PAGE SAYFASINA AKTARILACAK PARAMETRİK OLARAK\n//const [reportTitle, setReportTitle] = useState([]);\nconst{query,setQuery}=useQuery();const[menuName,setMenuName]=useState([]);// TODO REPORT PAGE SAYFASINA AKTARILACAK SAYFANIN BAŞLIĞI  OLARAK\n//const [query, setQuery] = useState([]); // TODO REPORT PAGE SAYFASINA AKATARIALACAK SORGU OLARAK  OLARAK\n//const [initRun, setInitRun] = useState([]); // TODO REPORT PAGE SAYFASINA AKATARILACAK DEĞER  OLARAK\nuseEffect(()=>{async function fetchMenuItems(){try{const response=await axios.get(\"/tree-view\");const menuArray=[];const queryArray=[];for(let i=0;i<Object.values(response.data).length;i++){menuArray.push(Object.values(response.data[i])[2]);queryArray.push(Object.values(response.data[i])[6]);}setMenuName(menuArray);setQuery(queryArray);console.log(queryArray);}catch(error){console.error(\"Failed to fetch menu items: \",error);}}fetchMenuItems();},[setQuery]);// Stateleri içeren bağlamı oluştur\n//TODO Link tıklandığında ilgili query değerini konsola yazdır\n//TODO Link tıklandığında query[index] değierini useContext ile diğer komponente almamız gerek bunu nasul yapıcaz?\nconst handleClick=index=>{console.log(\"Tıklanan menünün query değeri:\",query[index]);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"RAPORLAR\"}),/*#__PURE__*/_jsx(\"ul\",{children:menuName.map((menuItem,index)=>/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(Link,{to:{pathname:\"/report-page\",state:{query:query[index]}},onClick:()=>handleClick(index),children:menuItem})},index))})]});}export default TreeView;","map":{"version":3,"names":["React","useState","useEffect","Link","axios","useQuery","jsx","_jsx","jsxs","_jsxs","TreeView","query","setQuery","menuName","setMenuName","fetchMenuItems","response","get","menuArray","queryArray","i","Object","values","data","length","push","console","log","error","handleClick","index","children","map","menuItem","to","pathname","state","onClick"],"sources":["C:/Internship Project/client/src/pages/HomePage/TreeView.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useQuery } from \"./QueryContext\";\r\n//Bağlamı Oluştur\r\n\r\nfunction TreeView() {\r\n  //const [recNo, setRecNo] = useState([]); //TODO REPORT PAGE SAYFASINA AKTARILACAK PARAMETRİK OLARAK\r\n  //const [reportTitle, setReportTitle] = useState([]);\r\n  const { query, setQuery } = useQuery();\r\n\r\n  const [menuName, setMenuName] = useState([]); // TODO REPORT PAGE SAYFASINA AKTARILACAK SAYFANIN BAŞLIĞI  OLARAK\r\n  //const [query, setQuery] = useState([]); // TODO REPORT PAGE SAYFASINA AKATARIALACAK SORGU OLARAK  OLARAK\r\n\r\n  //const [initRun, setInitRun] = useState([]); // TODO REPORT PAGE SAYFASINA AKATARILACAK DEĞER  OLARAK\r\n\r\n  useEffect(() => {\r\n    async function fetchMenuItems() {\r\n      try {\r\n        const response = await axios.get(\"/tree-view\");\r\n\r\n        const menuArray = [];\r\n        const queryArray = [];\r\n        for (let i = 0; i < Object.values(response.data).length; i++) {\r\n          menuArray.push(Object.values(response.data[i])[2]);\r\n          queryArray.push(Object.values(response.data[i])[6]);\r\n        }\r\n        setMenuName(menuArray);\r\n        setQuery(queryArray);\r\n        console.log(queryArray);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch menu items: \", error);\r\n      }\r\n    }\r\n    fetchMenuItems();\r\n  }, [setQuery]);\r\n\r\n  // Stateleri içeren bağlamı oluştur\r\n\r\n  //TODO Link tıklandığında ilgili query değerini konsola yazdır\r\n  //TODO Link tıklandığında query[index] değierini useContext ile diğer komponente almamız gerek bunu nasul yapıcaz?\r\n  const handleClick = (index) => {\r\n    console.log(\"Tıklanan menünün query değeri:\", query[index]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>RAPORLAR</h1>\r\n      <ul>\r\n        {menuName.map((menuItem, index) => (\r\n          <li key={index}>\r\n            <Link\r\n              to={{\r\n                pathname: \"/report-page\",\r\n                state: { query: query[index] },\r\n              }}\r\n              onClick={() => handleClick(index)}\r\n            >\r\n              {menuItem}\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TreeView;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,IAAI,KAAQ,kBAAkB,CACvC,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,gBAAgB,CACzC;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEA,QAAS,CAAAC,QAAQA,CAAA,CAAG,CAClB;AACA;AACA,KAAM,CAAEC,KAAK,CAAEC,QAAS,CAAC,CAAGP,QAAQ,CAAC,CAAC,CAEtC,KAAM,CAACQ,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAAE;AAC9C;AAEA;AAEAC,SAAS,CAAC,IAAM,CACd,cAAe,CAAAa,cAAcA,CAAA,CAAG,CAC9B,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAZ,KAAK,CAACa,GAAG,CAAC,YAAY,CAAC,CAE9C,KAAM,CAAAC,SAAS,CAAG,EAAE,CACpB,KAAM,CAAAC,UAAU,CAAG,EAAE,CACrB,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,CAAGC,MAAM,CAACC,MAAM,CAACN,QAAQ,CAACO,IAAI,CAAC,CAACC,MAAM,CAAEJ,CAAC,EAAE,CAAE,CAC5DF,SAAS,CAACO,IAAI,CAACJ,MAAM,CAACC,MAAM,CAACN,QAAQ,CAACO,IAAI,CAACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAClDD,UAAU,CAACM,IAAI,CAACJ,MAAM,CAACC,MAAM,CAACN,QAAQ,CAACO,IAAI,CAACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACrD,CACAN,WAAW,CAACI,SAAS,CAAC,CACtBN,QAAQ,CAACO,UAAU,CAAC,CACpBO,OAAO,CAACC,GAAG,CAACR,UAAU,CAAC,CACzB,CAAE,MAAOS,KAAK,CAAE,CACdF,OAAO,CAACE,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACtD,CACF,CACAb,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,CAACH,QAAQ,CAAC,CAAC,CAEd;AAEA;AACA;AACA,KAAM,CAAAiB,WAAW,CAAIC,KAAK,EAAK,CAC7BJ,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAEhB,KAAK,CAACmB,KAAK,CAAC,CAAC,CAC7D,CAAC,CAED,mBACErB,KAAA,QAAAsB,QAAA,eACExB,IAAA,OAAAwB,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBxB,IAAA,OAAAwB,QAAA,CACGlB,QAAQ,CAACmB,GAAG,CAAC,CAACC,QAAQ,CAAEH,KAAK,gBAC5BvB,IAAA,OAAAwB,QAAA,cACExB,IAAA,CAACJ,IAAI,EACH+B,EAAE,CAAE,CACFC,QAAQ,CAAE,cAAc,CACxBC,KAAK,CAAE,CAAEzB,KAAK,CAAEA,KAAK,CAACmB,KAAK,CAAE,CAC/B,CAAE,CACFO,OAAO,CAAEA,CAAA,GAAMR,WAAW,CAACC,KAAK,CAAE,CAAAC,QAAA,CAEjCE,QAAQ,CACL,CAAC,EATAH,KAUL,CACL,CAAC,CACA,CAAC,EACF,CAAC,CAEV,CAEA,cAAe,CAAApB,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}